# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Vite Github Pages Deployer
description: "Deploy your Vite app to github pages using actions. Doesn't require commits and pushes, clean deployment using only artifacts."
branding:
  icon: 'zap'  
  color: 'purple'
author: 'Skywarth'
inputs:
  public_base_path:
    description: "Public base path string for vite, this affects the routing, history and asset links. Make sure to provide appropriately since Github Pages stores your app in a directory under a subdomain."
    required: false
    default: "/${{ github.event.repository.name }}"
  build_path:
    description: "Which folder do you want your Github Page to use as root directory. Usually it is your build output directory such as ./dist "
    required: false
    default: ./dist
  artifact_name:
    description: "Desired name for the Deployment environment. It is also the exposed artifact name which contains the build output (dist)."
    required: false
    default: github-pages
  debug_mode:
    description: "Controls the debug mode, boolean, true is for on. When turned on, it'll output certain information on certain steps. Mainly used for development, but use it as you please to inspect your env and variables."
    required: false
    default: 'false'
  package_manager:
    description: "Your preference of package manager: 'npm' and 'yarn' are possible values."
    required: false
    default: 'npm'
outputs:
  github_pages_url:
    description: Github pages url provided by actions/deploy-pages, exposed as is.
    value: ${{steps.deployment.outputs.page_url}}
runs:
  using: "composite"
  steps:
      - name: Dump context
        if: ${{ inputs.debug_mode=='true'}}
        uses: crazy-max/ghaction-dump-context@v2
      - name: Dump build_path
        if: ${{ inputs.debug_mode=='true'}}
        run: echo "build_path is ${{ inputs.build_path }}"
        shell: bash
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Install
        run: |
              if [[ "${{ inputs.package_manager }}" == "yarn" ]]
              then 
                if [[ "${{ inputs.debug_mode }}" == "true" ]]; then echo "Installing via yarn"; fi;
                yarn install --immutable --immutable-cache --check-cache;
              else
                if [[ "${{ inputs.debug_mode }}" == "true" ]]; then echo "Installing via npm"; fi;
                npm ci; 
              fi
        shell: bash
        env:
          NODE_ENV: production
      - name: Build
        run: |
              if [[ "${{ inputs.package_manager }}" == "yarn" ]]
              then 
                if [[ "${{ inputs.debug_mode }}" == "true" ]]; then echo "Building via yarn"; fi;
                yarn build -- --base=${{ inputs.public_base_path }}
              else 
                if [[ "${{ inputs.debug_mode }}" == "true" ]]; then echo "Building via npm"; fi;
                npm run build -- --base=${{ inputs.public_base_path }}
              fi
        shell: bash
        env:
          NODE_ENV: production
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ${{ inputs.build_path }}
          name: ${{inputs.artifact_name}}
      - name: Deploy
        uses: actions/deploy-pages@v2
        with:
          artifact_name: ${{inputs.artifact_name}}
        id: deployment
        
        
        


